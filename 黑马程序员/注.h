#pragma once
/*
1.生成随机数种子sand((size_t)time(NULL));    //time(NULL)返回当前的时间，

2.	fgetc(文件指针)								//文件的字符读取				文件

==>> 变量
		//文件默认结尾为-1(ascll码中无-1),
			以-1为结束标志(类似字符串的\0)
		//头文件stdio.h中定义了#define EOF (-1)
			c语言以EOF作为文件结束标志

	fgets(存入地址,字节,文件指针)					//行读取文件给字符串			文件    ==>>  字符串
		eg:fgets(p,20,fp)

	fputs()(写入的字符,文件指针)					//字符串写入文件				字符串  ==>>  文件
		//若文件不存在,则建一新文件
		//若文件存在,则清空内容再写入
		//和读取一样,光标流会走
		//成功返回写入的字符,失败返回-1

	sprintf(字符串地址,"内容及占位符",变量)			//变量给字符串				变量   ==>>   字符串
		eg:sprintf(p, " %d%c%d = \n", a, c, b);

	sscanf(字符串地址,"内容及占位符",变量地址)		//读取字符串给变量		     	字符串  ==>>   变量
		eg:sscanf(p, "%d%c%d", &a, &c, &b);

	fprintf(文件指针,"内容及占位符",变量)			//变量写入文件				变量   ==>>    文件
		eg:fprintf(fp,"%s",ch);

	fscanf(文件指针,"内容及占位符",变量);			//文件格式化读取给字符串或变量	文件   ==>>    字符串或变量
		//遇到空格换行停止

3.
	(1).预处理		gcc -E        生成.i文件
			1>头文件展开
			2>宏定义展开
			3>删除注释
			4>条件编译

	(2).编译			gcc -S	
			1>检查语法
			2>转换成汇编语言

	(3).汇编			gcc -c	//compilation

	(4).链接			gcc -o
	

*/